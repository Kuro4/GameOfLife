<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:model="clr-namespace:GameOfLife.Core.Models;assembly=GameOfLife.Core"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:GameOfLife.WPF.BoardModule.Views"
             x:Class="GameOfLife.WPF.BoardModule.Views.Board"
             prism:ViewModelLocator.AutoWireViewModel="True"
             Background="#FFFFD0D0">
    <ItemsControl ItemsSource="{Binding Cells.Value}"
                  VirtualizingPanel.IsVirtualizing="True">
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <UniformGrid Columns="{Binding ColumnCount.Value, Mode=OneWay}"
                             Rows="{Binding RowCount.Value, Mode=OneWay}"/>
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
            <DataTemplate DataType="{x:Type model:BindableCell}">
                <Border AllowDrop="True" Focusable="True" >
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding DataContext.MouseDown, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Board}}}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding DataContext.MouseUp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Board}}}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseMove">
                            <i:InvokeCommandAction Command="{Binding DataContext.Reverse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Board}}}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAlive}" Value="true">
                                    <Setter Property="Background" Value="White"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAlive}" Value="false">
                                    <Setter Property="Background" Value="Black"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</UserControl>
